<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd ">
    <groupId>org.nhind</groupId>    
    <modelVersion>4.0.0</modelVersion>
    <artifactId>direct-project-stock-installer</artifactId>    
    <packaging>jar</packaging>
    <name>The direct project stock assembly installer UI.</name>
    <version>3.0.1</version>
    <description>Installer for the DirectProject Java RI stock assembly.</description>
    <inceptionYear>2010</inceptionYear>
    <url>http://api.nhindirect.org/x/www/api.nhindirect.org/java/site/direct-project-stock-installer/${project.version}</url> 
    <developers>
        <developer>
            <name>Greg Meyer</name>
            <id>GM2552</id>
            <email>gm2552@cerner.com</email>
            <roles>
                <role>owner</role>
            </roles>  
        </developer>                                               
     </developers>
     <organization>
        <name>The Direct Proejct</name>
        <url>http://nhindirect.org</url>
    </organization>
    <prerequisites>
        <maven>2.0.4</maven>
    </prerequisites>   
    <scm>
       <url>http://code.google.com/p/nhin-d/source/browse/#hg/java/assembly/stock-installer</url>  
       <connection>scm:hg:https://nhin-d.googlecode.com/hg/nhin-d/java/assembly/stock-installer</connection>
    </scm> 
    <issueManagement>
       <system>Google Code</system>
       <url>http://code.google.com/p/nhin-d/issues/list</url>       
    </issueManagement>	
    <licenses>
       <license>
          <name>New BSD License</name>
          <url>http://nhindirect.org/BSDLicense</url>
       </license>
    </licenses>  
    <repositories>
       <repository>
          <id>sonatype-snapshot</id>
          <name>Sonatype OSS Maven SNAPSHOT Repository</name>
          <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
       </repository>
       <repository>
          <id>sonatype-release</id>
          <name>Sonatype OSS Maven release Repository</name>
          <url>https://oss.sonatype.org/content/repositories/releases/</url>
       </repository>       
    </repositories>   
    <dependencies>      
       <dependency>
         <groupId>org.codehaus.izpack</groupId>
         <artifactId>izpack-compiler</artifactId>
         <version>5.0.0-beta9</version>
			<exclusions>
				<exclusion>
					<groupId>ant</groupId>
					<artifactId>ant</artifactId>
				</exclusion>
			</exclusions>	         
       </dependency>         
       <dependency>
         <groupId>org.nhind</groupId>
         <artifactId>agent</artifactId>
         <version>2.0</version>
       </dependency>   
	   <dependency>
	     <groupId>org.apache.ant</groupId>
	     <artifactId>ant-launcher</artifactId>
	     <version>1.8.4</version>
	     <scope>compile</scope>
	   </dependency>
	   <dependency>
	     <groupId>org.apache.ant</groupId>
	     <artifactId>ant-trax</artifactId>
	     <version>1.8.0</version>
	     <scope>compile</scope>
	   </dependency>	   
	   <dependency>
	     <groupId>org.apache.ant</groupId>
	     <artifactId>ant-nodeps</artifactId>
	     <version>1.8.1</version>
	     <scope>compile</scope>
	   </dependency>	   
	    <dependency>
	        <groupId>org.nhind</groupId>
	        <artifactId>config-service-client</artifactId>
	        <version>1.4</version>
	        <scope>compile</scope>
	    </dependency>	    	       
    </dependencies>          
   <build>
      <extensions>
	     <extension>
		    <groupId>org.apache.maven.wagon</groupId>
		    <artifactId>wagon-webdav</artifactId>
	        <version>RELEASE</version>
         </extension>
	    <extension>
	      <groupId>org.apache.maven.wagon</groupId>
	       <artifactId>wagon-ssh-external</artifactId>
	       <version>1.0-beta-6</version>
	    </extension>
	    <extension>
	      <groupId>org.apache.maven.wagon</groupId>
	       <artifactId>wagon-ssh</artifactId>
	       <version>1.0-beta-6</version>
	    </extension>          
	  </extensions>
	  <plugins>  
		 <plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<executions>
				<execution>
					<goals>
						<goal>testCompile</goal>
					</goals>
					<phase>compile</phase>
				</execution>
			</executions>
			<configuration>
			    <fork>true</fork>
				<optimize>true</optimize>
				<showDeprecation>true</showDeprecation>
				<encoding>UTF-8</encoding>
				<source>1.6</source>
				<target>1.6</target>
			</configuration>
		 </plugin>	 
	      <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-source-plugin</artifactId>
	        <version>2.0.3</version>
	        <executions>
	          <execution>
	            <goals>
	              <goal>jar</goal>
	            </goals>
	          </execution>
	        </executions>
	      </plugin>  		 
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <configuration>
               <archive>
                  <index>true</index>
                  <!--<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile> -->
               </archive>
            </configuration>
         </plugin>		  
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
               <execution>
                  <id>copy-stock-assembly</id>
                  <phase>package</phase>                  
                  <goals>
                     <goal>unpack</goal>
                  </goals>
                  <configuration>
	                 <artifactItems>
	                   <artifactItem>
	                     <groupId>org.nhind</groupId>
	                     <artifactId>direct-project-stock</artifactId>
	                     <version>${project.version}</version>
	                     <type>tar.gz</type>
	                     <overWrite>true</overWrite>		                    		                   
	                   </artifactItem>
	                </artifactItems>
	                <outputDirectory>${project.build.directory}</outputDirectory>       
                  </configuration>                  
               </execution>     
               <execution>
                  <id>copy-artifact-dependencies</id>
                  <goals>
                     <goal>copy-dependencies</goal>
                  </goals>
                  <configuration>
                     <outputDirectory>${project.build.directory}/lib</outputDirectory>       
                  </configuration>
               </execution>                                      
            </executions>
            <dependencies>
               <dependency>
                   <groupId>org.codehaus.plexus</groupId>
                   <artifactId>plexus-utils</artifactId>
                   <version>1.5.15</version>
               </dependency>
            </dependencies>            
         </plugin>   
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <executions>
            <execution>
              <id>copy-setup-scripts</id>
              <phase>package</phase>
              <configuration>
                <tasks>
                  <copy todir="${project.build.directory}/scripts">
                    <fileset dir="${basedir}/src/scripts" />
                  </copy>
                </tasks>
              </configuration>
              <goals>
                <goal>run</goal>
              </goals>
            </execution>
            <execution>
              <id>copy-util-lib</id>
              <phase>package</phase>
              <configuration>
                <tasks>
                  <copy file="${project.build.directory}/${project.artifactId}-${project.version}.jar" todir="${project.build.directory}/direct/tools/lib" />
                </tasks>
              </configuration>
              <goals>
                <goal>run</goal>
              </goals>
            </execution>  
            <execution>
              <id>copy dependency libs</id>
              <phase>package</phase>
              <configuration>
                <tasks>
                  <copy todir="${project.build.directory}/direct/tools/lib" >
                    <fileset dir="${project.build.directory}/lib">
                        <include name="ant*" />
                        <include name="xalan*" />       
                        <include name="xml*" /> 
                        <include name="serial*" />     
                        <include name="config-service*" />   
                        <include name="jaxrpc-api*" />  
                        <include name="jackson*" />      
                        <include name="wsdl*" />   
                        <include name="axis*" />   
                        <include name="http*" />  
                        <include name="saaj*" />  
                        <include name="commons*" />                                                                                                                                                                                                                                                                    
                    </fileset>
                  </copy>                          
                </tasks>
              </configuration>
              <goals>
                <goal>run</goal>
              </goals>
            </execution>                         
          </executions>
        </plugin>           
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.1</version>
          <executions>
            <execution>
              <id>create-staging-area</id>
              <phase>package</phase>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <tasks>
                  <copy todir="${staging.dir}">
                    <fileset dir="${basedir}/src/izpack" />
                  </copy>
                </tasks>
              </configuration>
            </execution>
          </executions>
        </plugin>	  
        <plugin>
          <groupId>org.codehaus.izpack</groupId>
          <artifactId>izpack-maven-plugin</artifactId>
          <version>1.0-alpha-5</version>
          <dependencies>
            <dependency>
              <groupId>org.codehaus.izpack</groupId>
              <artifactId>izpack-standalone-compiler</artifactId>
              <version>4.3.1</version>
            </dependency>
          </dependencies>
          <configuration>
            <izpackBasedir>${staging.dir}</izpackBasedir>
            <customPanelDirectory>${staging.dir}</customPanelDirectory>
          </configuration>
          <executions>
            <execution>
              <id>standard-installer</id>
              <phase>package</phase>
              <goals>
                <goal>izpack</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
       <!-- DOXIA does not yet copy resources to the generated-site or site location.  Bug
        DOXIA-355 was submitted in July of 09 and is listed to be resolved in DOXIA 1.2.
        This plugin a is work around for copying the resources from the book source to 
        the generate site. -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <executions>
            <execution>
              <id>book</id>
              <phase>pre-site</phase>
              <configuration>
                <tasks>
                  <copy todir="${project.build.directory}/generated-site/xdoc/users-guide/images/">
                    <fileset dir="${basedir}/src/books/users-guide/images/" />
                  </copy>
                  <copy todir="${project.build.directory}/site/users-guide/images/">
                    <fileset dir="${basedir}/src/books/users-guide/images/" />
                  </copy>                  
                </tasks>
              </configuration>
              <goals>
                <goal>run</goal>
              </goals>
            </execution>
          </executions>
        </plugin>        
	    <plugin>
			<groupId>org.apache.maven.doxia</groupId>
			<artifactId>doxia-maven-plugin</artifactId>
			<version>1.2</version>
			<executions>
				<execution>
					<phase>pre-site</phase>
					<goals>
						<goal>render-books</goal>
					</goals>
				</execution>
			</executions>
			<configuration>
				<books>
					<book>
						<directory>src/books/users-guide</directory>
						<descriptor>src/books/users-guide.xml</descriptor>
						<formats>
							<format>
								<id>xdoc</id>
							</format>													
						</formats>
					</book>
				</books>
			</configuration>
			<dependencies>
				<dependency>
					<groupId>org.codehaus.plexus</groupId>
					<artifactId>plexus-utils</artifactId>
					<version>1.5.12</version>
				</dependency>
				<dependency>
					<groupId>org.apache.maven.doxia</groupId>
					<artifactId>doxia-decoration-model</artifactId>
					<version>1.2</version>
				</dependency>
                <dependency>
                    <groupId>org.apache.maven.doxia</groupId>
                    <artifactId>doxia-module-confluence</artifactId>
                    <version>1.2</version>
                </dependency>	
			</dependencies>			
		</plugin>   
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-javadoc-plugin</artifactId>
			<version>2.6.1</version>
			<configuration>
				<charset>UTF-8</charset>
				<docencoding>UTF-8</docencoding>
				<docfilessubdirs>true</docfilessubdirs>
				<detectJavaApiLink>true</detectJavaApiLink>
				<detectLinks>true</detectLinks>
				<source>1.6</source>
				<show>protected</show>
			</configuration>
            <executions>
              <execution>
                <phase>package</phase>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>					
		</plugin>		 
        <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-gpg-plugin</artifactId>
              <executions>
                <execution>
                   <id>sign-artifacts</id>
                   <phase>package</phase>
                   <goals>
                      <goal>sign</goal>
                   </goals>
                </execution>
              </executions>
        </plugin>   		       
      </plugins>
      <pluginManagement>
       <plugins>
          <plugin>
             <groupId>org.apache.maven.plugins</groupId>
             <artifactId>maven-release-plugin</artifactId>
             <version>2.0</version>
             <configuration>
                <tagBase>scm:hg:https://nhin-d.googlecode.com/hg/nhin-d/java/tags</tagBase>
             </configuration>
          </plugin>
           <plugin>
             <groupId>org.apache.maven.plugins</groupId>
             <artifactId>maven-site-plugin</artifactId>
             <version>2.1.1</version>
             <dependencies>
               <dependency>
                <groupId>commons-httpclient</groupId>
                <artifactId>commons-httpclient</artifactId>
                <version>3.1</version>
                <exclusions>
                 <exclusion>
                   <groupId>commons-logging</groupId>
                   <artifactId>commons-logging</artifactId>
                 </exclusion>
               </exclusions>
             </dependency>
            </dependencies>
          </plugin>
       </plugins>
    </pluginManagement>		      
   </build>
   <distributionManagement>
    <site>
      <id>nhind-site</id>
      <name>NHIN Direct API publication site</name>
      <url>sftp://api.nhindirect.org/x/www/api.nhindirect.org/java/site/assembly/stock-installer/${project.version}</url>
    </site>
    <snapshotRepository>
        <id>sonatype-snapshot</id>
        <name>Sonatype OSS Maven SNAPSHOT Repository</name>
        <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        <uniqueVersion>false</uniqueVersion>
     </snapshotRepository>
     <repository>
        <id>sonatype-release</id>
        <name>Sonatype OSS Maven Release Repositor</name>
        <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        <uniqueVersion>false</uniqueVersion>
     </repository>		    
   </distributionManagement>   
   
  <properties>
    <staging.dir>${project.build.directory}/staging</staging.dir>
  </properties>   
</project>  