<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://camel.apache.org/schema/spring 
       http://camel.apache.org/schema/spring/camel-spring.xsd">

  <bean id="generalTimeoutCondition" class="org.nhindirect.monitor.condition.impl.DecayingTimeoutCondition">
        <constructor-arg value="1000"/>
  </bean>

  <bean id="reliableTimeoutCondition" class="org.nhindirect.monitor.condition.impl.DecayingTimeoutCondition">
        <constructor-arg value="1000"/>
  </bean>

  <bean id="varaiableTimeoutCondition" class="org.nhindirect.monitor.condition.impl.VariableTimeoutCondition">
		<constructor-arg ref="generalTimeoutCondition" />
		<constructor-arg ref="reliableTimeoutCondition" />
  </bean>

  <bean id="generalCompletionCondition" class="org.nhindirect.monitor.condition.impl.GeneralCompletionCondition" />

  <bean id="reliableCompletionCondition" class="org.nhindirect.monitor.condition.impl.TimelyAndReliableCompletionCondition" />

  <bean id="variableCompletionCondition" class="org.nhindirect.monitor.condition.impl.VariableCompletionCondition">
		<constructor-arg ref="reliableCompletionCondition" />
		<constructor-arg ref="generalCompletionCondition" />
  </bean>

  <bean id="aggregationStrategy" class="org.nhindirect.monitor.aggregator.BasicTxAggregator">
		<constructor-arg ref="variableCompletionCondition" />  
		<constructor-arg ref="varaiableTimeoutCondition" />  		
  </bean>

  <bean id="msgIdCorrelator" class="org.nhindirect.monitor.expression.MessageIdCorrelationExpression" />

  <bean id="textAssemblerFactor" class="org.nhindirect.common.mail.dsn.impl.HumanReadableTextAssemblerFactory">
  </bean> 

  <bean id="textBodyGenerator" class="org.nhindirect.common.mail.dsn.impl.DefaultDSNFailureTextBodyPartGenerator">
        <constructor-arg value="%original_sender_tag%,&lt;br/&gt;"/>
        <constructor-arg value="The &lt;i&gt;Cerner Direct&lt;/i&gt; Team&lt;br/&gt;&lt;br/&gt;&lt;b&gt;&lt;u&gt;Troubleshooting Information&lt;/u&gt;&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;%headers_tag%"/>        
        <constructor-arg value="We have not received a delivery notification for the following recipient(s) because the receiving system may be down or configured incorrectly:"/>    
        <constructor-arg value=""/>            
        <constructor-arg value="&lt;b&gt;Your message delivery has been delayed.&lt;/b&gt; Please confirm your recipient email addresses are correct. If the addresses are correct and the message is time sensitive, consider a different communication method. We will send another notification to you in 24 hours if we still have not received a delivery notification.&lt;br&gt;&lt;br/&gt;If you continue to receive this message, please have the recipient check with their system admin and include the &quot;Troubleshooting Information&quot; below."/>              
        <constructor-arg ref="textAssemblerFactor"/>    
  </bean>

  <bean id="dsnGenerator" class="org.nhindirect.common.mail.dsn.DSNGenerator">
        <constructor-arg value="Not Delivered:"/>
  </bean>

  <bean id="dsnMessageProcessor" class="org.nhindirect.monitor.processor.DSNMessageGenerator">
		<constructor-arg ref="dsnGenerator" />
		<constructor-arg value="postmaster" />	
		<constructor-arg ref="variableCompletionCondition" />	
		<constructor-arg value="DirectMessageMonitor" />	
		<constructor-arg ref="textBodyGenerator" />							
  </bean>


  <camelContext xmlns="http://camel.apache.org/schema/spring">  
    
    <route id="direct-reliable">
      <from uri="direct:start"/>
      <aggregate strategyRef="aggregationStrategy" ignoreInvalidCorrelationKeys="true">
        <correlationExpression>
            <ref>msgIdCorrelator</ref>
        </correlationExpression>
        <completionPredicate>
          <method bean="aggregationStrategy" method="isAggregationComplete"/>
        </completionPredicate>     
        <completionTimeout>
          <method bean="aggregationStrategy" method="getAggregationTime"/>
        </completionTimeout>  
        <choice>
           <when>
              <method bean="aggregationStrategy" method="isAggregationComplete"/>
              <stop/>
           </when>
           <otherwise>
              <to uri="direct:error-generator"/>
           </otherwise>
        </choice>      
      </aggregate>
    </route>
 
    <route id="errorgen">
      <from uri="direct:error-generator"/>
      <bean ref="dsnMessageProcessor"/>
      <to uri="mock:result"/>
    </route>
    
 
</camelContext>

</beans>