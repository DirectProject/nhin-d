<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NLog.ComInterop</name>
    </assembly>
    <members>
        <member name="T:NLog.ComInterop.ILogger">
            <summary>
            NLog COM Interop logger interface
            </summary>
        </member>
        <member name="M:NLog.ComInterop.ILogger.Log(System.String,System.String)">
            <summary>
            Writes the diagnostic message at the specified level.
            </summary>
            <param name="level">The log level.</param>
            <param name="message">A <see langword="string" /> to be written.</param>
        </member>
        <member name="M:NLog.ComInterop.ILogger.Trace(System.String)">
            <summary>
            Writes the diagnostic message at the Trace level.
            </summary>
            <param name="message">A <see langword="string" /> to be written.</param>
        </member>
        <member name="M:NLog.ComInterop.ILogger.Debug(System.String)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="message">A <see langword="string" /> to be written.</param>
        </member>
        <member name="M:NLog.ComInterop.ILogger.Info(System.String)">
            <summary>
            Writes the diagnostic message at the Info level.
            </summary>
            <param name="message">A <see langword="string" /> to be written.</param>
        </member>
        <member name="M:NLog.ComInterop.ILogger.Warn(System.String)">
            <summary>
            Writes the diagnostic message at the Warn level.
            </summary>
            <param name="message">A <see langword="string" /> to be written.</param>
        </member>
        <member name="M:NLog.ComInterop.ILogger.Error(System.String)">
            <summary>
            Writes the diagnostic message at the Error level.
            </summary>
            <param name="message">A <see langword="string" /> to be written.</param>
        </member>
        <member name="M:NLog.ComInterop.ILogger.Fatal(System.String)">
            <summary>
            Writes the diagnostic message at the Fatal level.
            </summary>
            <param name="message">A <see langword="string" /> to be written.</param>
        </member>
        <member name="M:NLog.ComInterop.ILogger.IsEnabled(System.String)">
            <summary>
            Checks if the specified log level is enabled.
            </summary>
            <param name="level">The log level.</param>
            <returns>A value indicating whether the specified log level is enabled.</returns>
        </member>
        <member name="P:NLog.ComInterop.ILogger.IsTraceEnabled">
            <summary>
            Returns the boolean value indicating whether the Trace level is enabled.
            </summary>
        </member>
        <member name="P:NLog.ComInterop.ILogger.IsDebugEnabled">
            <summary>
            Returns the boolean value indicating whether the Debug level is enabled.
            </summary>
        </member>
        <member name="P:NLog.ComInterop.ILogger.IsInfoEnabled">
            <summary>
            Returns the boolean value indicating whether the Info level is enabled.
            </summary>
        </member>
        <member name="P:NLog.ComInterop.ILogger.IsWarnEnabled">
            <summary>
            Returns the boolean value indicating whether the Warn level is enabled.
            </summary>
        </member>
        <member name="P:NLog.ComInterop.ILogger.IsErrorEnabled">
            <summary>
            Returns the boolean value indicating whether the Error level is enabled.
            </summary>
        </member>
        <member name="P:NLog.ComInterop.ILogger.IsFatalEnabled">
            <summary>
            Returns the boolean value indicating whether the Fatal level is enabled.
            </summary>
        </member>
        <member name="P:NLog.ComInterop.ILogger.LoggerName">
            <summary>
            The logger name.
            </summary>
        </member>
        <member name="T:NLog.ComInterop.ILogManager">
            <summary>
            NLog COM Interop LogManager interface
            </summary>
        </member>
        <member name="M:NLog.ComInterop.ILogManager.LoadConfigFromFile(System.String)">
            <summary>
            Loads NLog configuration from the specified file.
            </summary>
            <param name="fileName">The name of the file to load NLog configuration from</param>
        </member>
        <member name="M:NLog.ComInterop.ILogManager.GetLogger(System.String)">
            <summary>
            Creates the specified logger object and assigns a LoggerName to it.
            </summary>
            <param name="name">Logger name</param>
            <returns>The new logger instance.</returns>
        </member>
        <member name="P:NLog.ComInterop.ILogManager.InternalLogToConsole">
            <summary>
            Internal log to the console.
            </summary>
        </member>
        <member name="P:NLog.ComInterop.ILogManager.InternalLogFile">
            <summary>
            Internal log file.
            </summary>
        </member>
        <member name="P:NLog.ComInterop.ILogManager.InternalLogLevel">
            <summary>
            The name of the internal log level.
            </summary>
        </member>
        <member name="T:NLog.ComInterop.Logger">
            <summary>
            NLog COM Interop logger implementation
            </summary>
        </member>
        <member name="T:NLog.ComInterop.LogManager">
            <summary>
            NLog COM Interop LogManager implementation
            </summary>
        </member>
    </members>
</doc>
